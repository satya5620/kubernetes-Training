## types of imstalllation

```
https://www.devopsschool.com/tutorial/kubernetes/

```
## foloow the instuctioon for minicube cluster installation syteps
```
centos1 -- 192.168.0.48
user1/user

centos2 -- 192.168.0.47
user2/user



ip 13.233.107.212


https://www.devopsschool.com/notes/docker/2019/classroom-jan-public-2019.txt



https://www.devopsschool.com/notes/docker/2019/online-jan-2019.txt


https://www.devopsschool.com/notes/docker/2019/







13.233.74.205 - master - 172.31.24.67

13.233.153.243 - worker - 172.31.14.111


IN Master :
should follow the belkow step1 to step5

In Worker :
should folow the below step1 & step2 , step 6


Master and worker node should me same below :

step1:
sudo yum install -y yum-utils device-mapper-persistent-data lvm2
sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
sudo yum install â€“y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
sudo yum-config-manager --enable rhui-REGION-rhel-server-extras
sudo yum install -y docker-ce
sudo yum install docker-ce
sudo systemctl enable docker
sudo systemctl start docker

step2:
Docker Engine
https://www.devopsschool.com/tutorial/docker/install-config/docker-install-commuityedition-centos-rhel.html

Installing kubeadm, kubelet and kubectl
---------------------------------------------
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kube*
EOF

# Set SELinux in permissive mode (effectively disabling it)
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
systemctl enable --now kubelet

step3 :
kubeadm init


To start using your cluster, you need to run the following as a regular user: ( user lopgin from excute below command)
step4 :
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
Refer link : https://kubernetes.io/docs/concepts/cluster-administration/addons/

step 5:
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  
You can now join any number of machines by running the following on each node
as root:

step 6 : after excute step:5 then provide token and that token to use in worker node due to cluster manage worker node-level.
kubeadm join 172.31.20.25:6443 --token zkdqsh.sexzkgl8xcfeuovy --discovery-token-ca-cert-hash sha256:8db3256f43ca3fc688b366a0e54a1f35e6f392e8922691664cf0c7c213f3a122
```
